{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetime = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\nconst value = document.querySelectorAll('.value');\n\nlet userSelectedDate;\n\nfunction addLeadingZero(value) {\n  return value < 10 ? '0' + value.toString() : value;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    let date = Date.now();\n\n    let valid = userSelectedDate - date;\n\n    if (valid > 0) {\n      button.disabled = false;\n\n      button.addEventListener('click', function () {\n        let timerId = setInterval(() => {\n          valid = valid - 1000;\n\n          let arr = Object.values(convertMs(valid));\n\n          for (let i = 0; i < value.length; i++) {\n            value[i].innerHTML = addLeadingZero(arr[i]);\n          }\n\n          console.log(valid);\n          if (valid <= 1000) {\n            clearInterval(timerId);\n          }\n        }, 1000);\n\n        button.disabled = true;\n      });\n    } else {\n      iziToast.error({ message: 'Please choose a date in the future' });\n      button.disabled = true;\n    }\n  },\n};\n\nflatpickr(datetime, options);\n"],"names":["datetime","button","value","userSelectedDate","addLeadingZero","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","date","valid","timerId","arr","i","iziToast","flatpickr"],"mappings":"wvBAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,iBAAiB,QAAQ,EAEhD,IAAIC,EAEJ,SAASC,EAAeF,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAM,SAAQ,EAAKA,CAC/C,CAEA,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBT,EAAmBS,EAAc,CAAC,EAElC,IAAIC,EAAO,KAAK,IAAG,EAEfC,EAAQX,EAAmBU,EAE3BC,EAAQ,GACVb,EAAO,SAAW,GAElBA,EAAO,iBAAiB,QAAS,UAAY,CAC3C,IAAIc,EAAU,YAAY,IAAM,CAC9BD,EAAQA,EAAQ,IAEhB,IAAIE,EAAM,OAAO,OAAOX,EAAUS,CAAK,CAAC,EAExC,QAASG,EAAI,EAAGA,EAAIf,EAAM,OAAQe,IAChCf,EAAMe,CAAC,EAAE,UAAYb,EAAeY,EAAIC,CAAC,CAAC,EAG5C,QAAQ,IAAIH,CAAK,EACbA,GAAS,KACX,cAAcC,CAAO,CAEzB,EAAG,GAAI,EAEPd,EAAO,SAAW,EACpB,CAAC,IAEDiB,EAAS,MAAM,CAAE,QAAS,oCAAoC,CAAE,EAChEjB,EAAO,SAAW,GAEtB,CACF,EAEAkB,EAAUnB,EAAUW,CAAO"}